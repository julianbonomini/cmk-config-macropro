#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define BT     1

/ {

    behaviors {
        rot_kp: rot_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "rot_kp";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        rot_macro: rot_macro {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "rot_macro";
            #sensor-binding-cells = <2>;
            bindings = <&macropro_k1>, <&macropro_k1>;
        };
    };

    macros {
        macropro_k1: macropro_k1 {
            label = "macropro_k1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_COMMAND>
                , <&macro_press &kp LEFT_SHIFT>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_press &kp LEFT_CONTROL>
                , <&macro_tap &kp NUMBER_1>
                , <&macro_release &kp LEFT_COMMAND>
                , <&macro_release &kp LEFT_SHIFT>
                , <&macro_release &kp LEFT_ALT>
                , <&macro_release &kp LEFT_CONTROL>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";l

        default_layer {
            bindings = <
                &kp A &kp B &kp C &kp D &kp E &kp F &kp G &kp H &kp I &kp J &kp K &kp L
            >;
            sensor-bindings = <&rot_kp TAB LS(TAB) &rot_kp LG(LS(RIGHT_ARROW)) LG(LS(LEFT_ARROW))>;
        };

        bt_layer {
            bindings = <
                &none   &bootloader
                &none   &bt BT_CLR
            >;
            sensor-bindings = <&rot_kp LEFT_ARROW RIGHT_ARROW &rot_kp UP_ARROW DOWN_ARROW>;
        };
    };
};