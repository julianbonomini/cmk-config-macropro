#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define BT     1

/ {

    behaviors {
        rot_kp: rot_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "rot_kp";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        rot_macro: rot_macro {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "rot_macro";
            #sensor-binding-cells = <2>;
            bindings = <&macropro>, <&macropro>;
        };
    };

    macros {
        macropro: macropro {
            label = "macropro";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LEFT_COMMAND>
                , <&macro_press &kp LEFT_SHIFT>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_press &kp LEFT_CONTROL>
                , <&macro_param_1to1>
                , <&kp MACRO_PLACEHOLDER>
                , <&macro_release &kp LEFT_COMMAND>
                , <&macro_release &kp LEFT_SHIFT>
                , <&macro_release &kp LEFT_ALT>
                , <&macro_release &kp LEFT_CONTROL>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp N4 &kp N3 &kp N2 &macropro N1
                &kp N5 &kp N7 &kp N9 &kp E
                &kp N6 &kp N8 &kp T &kp W
            >;
            sensor-bindings = <&rot_kp TAB LS(TAB) &rot_kp RIGHT_ARROW LEFT_ARROW &rot_kp TAB LS(TAB) &rot_kp LG(LS(RIGHT_ARROW)) LG(LS(LEFT_ARROW))>;
        };

        bt_layer {
            bindings = <
                &none   &bootloader
                &none   &bt BT_CLR
            >;
            sensor-bindings = <&rot_kp LEFT_ARROW RIGHT_ARROW &rot_kp UP_ARROW DOWN_ARROW>;
        };
    };
};